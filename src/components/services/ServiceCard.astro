---
import type { ImageMetadata } from "astro";

interface Props {
  title: string;
  description?: string;
  img?: ImageMetadata;
  src?: string;
  alt?: string;
}

const { title, description = "", img = null, src = "", alt = "" } = Astro.props;
---

<article>
  <img src={img?.src || src} {alt} class="background" />
  <h3>{title}</h3>

  <button class="know-more">Saber Mas</button>
  <p>{description}</p>
</article>

<style>
  article {
    display: flex;
    position: relative;
    flex-direction: column;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    background-color: var(--bg-accent-color);
    width: calc(100% - 15px);
    overflow: hidden;
    /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */
    padding-top: var(--space-4);

    &:before {
      content: "";
      position: absolute;
      inset: 0;
      left: -7px;
      margin: auto;
      width: calc(100% + 15px);
      height: calc(100% + 15px);
      z-index: -10;
      border-radius: var(--border-radius-md);
      /* background: linear-gradient(
        -45deg,
        #033f3f 0%,
        #055858 50%,
        #033f3f 100%
      ); */
    }

    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      z-index: -1;
      filter: brightness(0.4) blur(2px);
      transition: filter 0.3s ease-in-out;
      border-radius: var(--border-radius-md);
    }

    p {
      width: 100%;
      display: none;
      text-align: center;
      position: relative;
      align-items: center;
      justify-content: center;
      justify-self: flex-end;
      height: 0;
      top: 100%;
      padding-inline: var(--space-3);
      color: var(--bg-accent-light);
      /* background: linear-gradient(
        to bottom,
        transparent 0%,
        rgba(31, 31, 31, 0.438) 100%
      ); */

      transition:
        height 0.3s ease-in-out,
        top 0.3s ease-in-out,
        display 0.5s ease-in-out allow-discrete;
    }

    h3 {
      font-size: clamp(var(--font-size-lg), 3vw + 1rem, var(--font-size-4xl));
      margin-bottom: 0.5rem;
      text-align: center;
      color: var(--bg-accent-light);
    }

    .know-more {
      display: inline-block;
      font-size: clamp(var(--font-size-sm), 2vw, var(--font-size-xl));
      padding: var(--space-2) var(--space-4);
      text-decoration: none;
      font-weight: 500;
      transition: color 0.3s ease-in-out;
      justify-self: flex-end;
    }

    button {
      font-size: clamp(
        var(--font-size-base),
        2vw + 0.5rem,
        var(--font-size-2xl)
      );
      padding: var(--space-3) var(--space-6);
      transition:
        opacity 0.3s ease-in-out,
        display 0.5s ease-in-out allow-discrete;
    }

    &:hover {
      /* justify-content: end; */
      img {
        filter: brightness(0.2) blur(10px);
      }
      button {
        display: none;
        opacity: 0;
        transition:
          opacity 0.4s ease-in-out,

          @starting-style {
          opacity: 1;
        }
      }
      p {
        flex-grow: 0;
        height: fit-content;
        top: 0;
        display: flex;
        transition:
          height 0.4s ease-in-out,
          top 0.4s ease-in-out;

        @starting-style {
          height: 0;
          top: 100%;
        }
      }

      /* p {
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 40%;
        z-index: 1;
        background-color: var(--bg-accent-color);
        padding-block: var(--space-6);

        @starting-style {
          height: 0;
          top: 100%;
        }
      } */
    }
  }
</style>
